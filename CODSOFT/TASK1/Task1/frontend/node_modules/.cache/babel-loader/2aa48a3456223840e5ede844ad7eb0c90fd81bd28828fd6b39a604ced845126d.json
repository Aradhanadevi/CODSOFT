{"ast":null,"code":"import api from \"../../../config/api\";\nimport { canceledOrderFailure, canceledOrderRequest, canceledOrderSuccess, confirmedOrderFailure, confirmedOrderRequest, confirmedOrderSuccess, deleteOrderFailure, deleteOrderRequest, deleteOrderSuccess, deliveredOrderFailure, deliveredOrderRequest, deliveredOrderSuccess, getOrdersFailure, getOrdersRequest, getOrdersSuccess, placedOrderFailure, placedOrderRequest, placedOrderSuccess, shipOrderFailure, shipOrderRequest, shipOrderSuccess } from \"./ActionCreator\";\nexport const getOrders = reqData => {\n  console.log(\"get all orders \", reqData);\n  return async dispatch => {\n    dispatch(getOrdersRequest());\n    try {\n      const response = await api.get(`/api/admin/orders/`);\n      console.log(\"get all orders \", response.data);\n      dispatch(getOrdersSuccess(response.data));\n    } catch (error) {\n      console.log(\"catch error \", error);\n      dispatch(getOrdersFailure(error.message));\n    }\n  };\n};\nexport const confirmOrder = orderId => async dispatch => {\n  dispatch(confirmedOrderRequest());\n  try {\n    const response = await api.put(`/api/admin/orders/${orderId}/confirmed`);\n    const data = response.data;\n    console.log(\"confirm_order \", data);\n    dispatch(confirmedOrderSuccess(data));\n  } catch (error) {\n    dispatch(confirmedOrderFailure(error.message));\n  }\n};\nexport const shipOrder = orderId => {\n  return async dispatch => {\n    try {\n      dispatch(shipOrderRequest());\n      const {\n        data\n      } = await api.put(`/api/admin/orders/${orderId}/ship`);\n      console.log(\" shipped order\", data);\n      dispatch(shipOrderSuccess(data));\n    } catch (error) {\n      dispatch(shipOrderFailure(error.message));\n    }\n  };\n};\nexport const deliveredOrder = orderId => async dispatch => {\n  dispatch(deliveredOrderRequest());\n  try {\n    const response = await api.put(`/api/admin/orders/${orderId}/deliver`);\n    const data = response.data;\n    console.log(\"dilivered order \", data);\n    dispatch(deliveredOrderSuccess(data));\n  } catch (error) {\n    dispatch(deliveredOrderFailure(error.message));\n  }\n};\nexport const cancelOrder = orderId => async dispatch => {\n  dispatch(canceledOrderRequest());\n  try {\n    const response = await api.put(`/api/admin/orders/${orderId}/cancel`);\n    const data = response.data;\n    dispatch(canceledOrderSuccess(data));\n  } catch (error) {\n    dispatch(canceledOrderFailure(error.message));\n  }\n};\n\n// Async action creator for deleting an order\nexport const deleteOrder = orderId => {\n  return async dispatch => {\n    dispatch(deleteOrderRequest());\n    try {\n      const {\n        data\n      } = await api.delete(`/api/admin/orders/${orderId}/delete`);\n      console.log(\"delete order \", data);\n      dispatch(deleteOrderSuccess(orderId));\n    } catch (error) {\n      console.log(\"catch error \", error);\n      dispatch(deleteOrderFailure(error));\n    }\n  };\n};\n\n// export const placeOrder = (order) => async (dispatch) => {\n//   dispatch(placedOrderRequest());\n\n//   try {\n//     const response = await api.post(`/api/admin/orders/`, order);\n//     const data = response.data;\n//     dispatch(placedOrderSuccess(data));\n//   } catch (error) {\n//     dispatch(placedOrderFailure(error.message));\n//   }\n// };","map":{"version":3,"names":["api","canceledOrderFailure","canceledOrderRequest","canceledOrderSuccess","confirmedOrderFailure","confirmedOrderRequest","confirmedOrderSuccess","deleteOrderFailure","deleteOrderRequest","deleteOrderSuccess","deliveredOrderFailure","deliveredOrderRequest","deliveredOrderSuccess","getOrdersFailure","getOrdersRequest","getOrdersSuccess","placedOrderFailure","placedOrderRequest","placedOrderSuccess","shipOrderFailure","shipOrderRequest","shipOrderSuccess","getOrders","reqData","console","log","dispatch","response","get","data","error","message","confirmOrder","orderId","put","shipOrder","deliveredOrder","cancelOrder","deleteOrder","delete"],"sources":["C:/Users/User/Downloads/ecommerce-mern-zip/ecommerce-mern-zip/frontedn-zip/src/Redux/Admin/Orders/Action.js"],"sourcesContent":["\r\nimport api from \"../../../config/api\";\r\nimport {\r\n  canceledOrderFailure,\r\n  canceledOrderRequest,\r\n  canceledOrderSuccess,\r\n  confirmedOrderFailure,\r\n  confirmedOrderRequest,\r\n  confirmedOrderSuccess,\r\n  deleteOrderFailure,\r\n  deleteOrderRequest,\r\n  deleteOrderSuccess,\r\n  deliveredOrderFailure,\r\n  deliveredOrderRequest,\r\n  deliveredOrderSuccess,\r\n  getOrdersFailure,\r\n  getOrdersRequest,\r\n  getOrdersSuccess,\r\n  placedOrderFailure,\r\n  placedOrderRequest,\r\n  placedOrderSuccess,\r\n  shipOrderFailure,\r\n  shipOrderRequest,\r\n  shipOrderSuccess,\r\n} from \"./ActionCreator\";\r\n\r\nexport const getOrders = (reqData) => {\r\n  console.log(\"get all orders \", reqData);\r\n  return async (dispatch) => {\r\n    dispatch(getOrdersRequest());\r\n    try {\r\n     \r\n      const response = await api.get(`/api/admin/orders/`);\r\n      console.log(\"get all orders \", response.data);\r\n      dispatch(getOrdersSuccess(response.data));\r\n    } catch (error) {\r\n      console.log(\"catch error \", error);\r\n      dispatch(getOrdersFailure(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch) => {\r\n  dispatch(confirmedOrderRequest());\r\n\r\n  try {\r\n    const response = await api.put(\r\n      `/api/admin/orders/${orderId}/confirmed`\r\n    );\r\n    const data = response.data;\r\n    console.log(\"confirm_order \",data)\r\n    dispatch(confirmedOrderSuccess(data));\r\n  } catch (error) {\r\n    dispatch(confirmedOrderFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const shipOrder = (orderId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(shipOrderRequest());\r\n      const {data} = await api.put(`/api/admin/orders/${orderId}/ship`);\r\n      console.log(\" shipped order\",data)\r\n      dispatch(shipOrderSuccess(data));\r\n    } catch (error) {\r\n      dispatch(shipOrderFailure(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deliveredOrder = (orderId) => async (dispatch) => {\r\n  dispatch(deliveredOrderRequest());\r\n\r\n  try {\r\n    const response = await api.put(\r\n      `/api/admin/orders/${orderId}/deliver`\r\n    );\r\n    const data = response.data;\r\n    console.log(\"dilivered order \",data)\r\n    dispatch(deliveredOrderSuccess(data));\r\n  } catch (error) {\r\n    dispatch(deliveredOrderFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch) => {\r\n  dispatch(canceledOrderRequest());\r\n\r\n  try {\r\n    const response = await api.put(\r\n      `/api/admin/orders/${orderId}/cancel`\r\n    );\r\n    const data = response.data;\r\n    dispatch(canceledOrderSuccess(data));\r\n  } catch (error) {\r\n    dispatch(canceledOrderFailure(error.message));\r\n  }\r\n};\r\n\r\n// Async action creator for deleting an order\r\nexport const deleteOrder = (orderId) => {\r\n  return async(dispatch) => {\r\n    dispatch(deleteOrderRequest());     \r\n   try {\r\n     const {data} = await api.delete(`/api/admin/orders/${orderId}/delete`);\r\n     console.log(\"delete order \",data)\r\n     dispatch(deleteOrderSuccess(orderId));\r\n   } catch (error) {\r\n    console.log(\"catch error \",error)\r\n     dispatch(deleteOrderFailure(error));\r\n   }\r\n      \r\n  };\r\n};\r\n\r\n// export const placeOrder = (order) => async (dispatch) => {\r\n//   dispatch(placedOrderRequest());\r\n\r\n//   try {\r\n//     const response = await api.post(`/api/admin/orders/`, order);\r\n//     const data = response.data;\r\n//     dispatch(placedOrderSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(placedOrderFailure(error.message));\r\n//   }\r\n// };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}